.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2024-01-22" "dos2unix" "2024-01-22"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAMN"
.IX Header "NAMN"
dos2unix \- konverterare för textfilsformat från DOS/Mac till Unix och vice versa
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    dos2unix [flaggor] [FIL …] [\-n INFIL UTFIL …]
\&    unix2dos [flaggor] [FIL …] [\-n INFIL UTFIL …]
.Ve
.SH "BESKRIVNING"
.IX Header "BESKRIVNING"
Paketet Dos2unix inkluderar verktygen \f(CW\*(C`dos2unix\*(C'\fR och \f(CW\*(C`unix2dos\*(C'\fR som konverterar oformaterade textfiler i \s-1DOS\-\s0 eller Mac-format till Unix-format och vice versa.
.PP
Textfiler i DOS/Windows har en radbrytning, också känd som nyrad, som är en kombination av två tecken: vagnretur (Carriage Return, \s-1CR\s0) åtföljt av radmatning (Line Feed, \s-1LF\s0). Textfiler i Unix har en radbrytning som är ett enda tecken: radmatning (Line Feed, \s-1LF\s0). Textfiler för Mac, innan Mac \s-1OS X,\s0 hade en radbrytning som var en enda vagnretur (Carriage Return, \s-1CR\s0). Numera använder Mac \s-1OS\s0 radbrytning i Unix-stil (\s-1LF\s0).
.PP
Förutom radbrytningar så kan Dos2unix också konvertera filers kodning. Några DOS-teckentabeller kan konverteras till Unix Latin\-1. Och filer som använder Windows Unicode (\s-1UTF\-16\s0) kan konverteras till Unix Unicode (\s-1UTF\-8\s0).
.PP
Binära filer hoppas över automatiskt, om inte konvertering tvingas.
.PP
Kataloger och FIFOs och andra filer som inte är vanliga filer hoppas över automatiskt.
.PP
Symboliska länkar och deras mål förblir oförändrade som standard. Symboliska länkar kan valfritt bli ersatta eller så kan utmatningen skrivas till målet för den symboliska länken. På Windows saknas stöd för att skriva till målet för en symbolisk länk.
.PP
Dos2unix modellerades efter dos2unix från SunOS/Solaris. Det finns en viktig skillnad gentemot originalversionen för SunOS/Solaris. Denna versionen gör som standard konverteringen på plats (gammalfilsläge), medan originalversionen från SunOS/Solaris bara hade stöd för parad konvertering (nyfilsläge). Se vidare flaggorna \f(CW\*(C`\-o\*(C'\fR och \f(CW\*(C`\-n\*(C'\fR. En annan skillnad är att SunOS/Solaris\-versionen som standard använder \fIiso\fR\-lägeskonvertering medan denna version som standard använder \fIascii\fR\-lägeskonvertering.
.SH "FLAGGOR"
.IX Header "FLAGGOR"
.IP "\fB\-\-\fR" 4
.IX Item "--"
Behandla alla efterföljande flaggor som filnamn. Använd denna flagga om du vill konvertera filer vars namn börjar med bindestreck. För att till exempel konvertera en fil med namnet “\-foo“ kan du använda detta kommando:
.Sp
.Vb 1
\&    dos2unix \-\- \-foo
.Ve
.Sp
Eller i nyfilsläge:
.Sp
.Vb 1
\&    dos2unix \-n \-\- \-foo out.txt
.Ve
.IP "\fB\-\-allow\-chown\fR" 4
.IX Item "--allow-chown"
Tillåt ändring av ägarskap för fil i gammalt filläge.
.Sp
När denna flagga används, kommer konverteringen inte att avbrytas när användar\- och/eller gruppägarskap för originalfilen inte kan bevaras i gammalt filläget. Konverteringen kommer att fortsätta och den konverterade filen kommer att få samma nya ägarskap som om den konverterades i nyfilsläge. Se också flaggorna \f(CW\*(C`\-o\*(C'\fR och \f(CW\*(C`\-n\*(C'\fR. Denna flagga är endast tillgänglig om dos2unix har stöd för att bevara användar\- och gruppägarskap för filer.
.IP "\fB\-ascii\fR" 4
.IX Item "-ascii"
Standardkonverteringsläge. Se vidare stycket KONVERTERINGSLÄGEN.
.IP "\fB\-iso\fR" 4
.IX Item "-iso"
Konvertering mellan \s-1DOS\-\s0 och ISO\-8859\-1\-teckentabeller. Se vidare stycket KONVERTERINGSLÄGEN.
.IP "\fB\-1252\fR" 4
.IX Item "-1252"
Använd Windows-teckentabell 1252 (Västeuropeisk).
.IP "\fB\-437\fR" 4
.IX Item "-437"
Använd DOS-teckentabell 437 (\s-1USA\s0). Detta är standardteckentabellen som används för ISO-konvertering.
.IP "\fB\-850\fR" 4
.IX Item "-850"
Använd DOS-teckentabell 850 (Västeuropeisk).
.IP "\fB\-860\fR" 4
.IX Item "-860"
Använd DOS-teckentabell 860 (Portugisisk).
.IP "\fB\-863\fR" 4
.IX Item "-863"
Använd DOS-teckentabell 863 (Fransk-kanadensisk).
.IP "\fB\-865\fR" 4
.IX Item "-865"
Använd DOS-teckentabell 865 (Nordisk).
.IP "\fB\-7\fR" 4
.IX Item "-7"
Konvertera 8\-bitars tecken till 7\-bitars blanksteg.
.IP "\fB\-b, \-\-keep\-bom\fR" 4
.IX Item "-b, --keep-bom"
Behåll byteordningsmarkering (Byte Order Mark, \s-1BOM\s0). Om infilen har en \s-1BOM,\s0 skriv en \s-1BOM\s0 i utfilen. Detta är standardbeteendet vid konvertering av DOS-radbrytningar. Se vidare flaggan \f(CW\*(C`\-r\*(C'\fR.
.IP "\fB\-c, \-\-convmode KONVERTERINGSLÄGE\fR" 4
.IX Item "-c, --convmode KONVERTERINGSLÄGE"
Ställer in konverteringsläge. Där KONVERTERINGSLÄGE är en av: \fIascii\fR, \fI7bit\fR, \fIiso\fR, \fImac\fR där ascii är standard.
.IP "\fB\-D, \-\-display\-enc \s-1KODNING\s0\fR" 4
.IX Item "-D, --display-enc KODNING"
Ställ in kodning för visad text. Där \s-1KODNING\s0 är en av: \fIansi\fR, \fIunicode\fR, \fIunicodebom\fR, \fIutf8\fR, \fIutf8bom\fR där ansi är standardvalet.
.Sp
Denna flagga finns bara tillgänglig i dos2unix för Windows med stöd för Unicode-filnamn. Denna flagga har ingen effekt på själva filnamnen som läses och skrivs, bara på hur de visas.
.Sp
Det finns flera metoder för att visa text i en Windows-konsol baserad på vilken kodning texten har. De har alla för\- och nackdelar.
.RS 4
.IP "\fBansi\fR" 4
.IX Item "ansi"
Dos2unix standardmetod är att använda ANSI-kodad text. Fördelen är att den är bakåtkompatibel. Det fungerar med raster\- och TrueType-teckensnitt. I vissa regioner kan du behöva ändra den aktiva \s-1DOS\s0 OEM-teckentabellen till Windows-systemets ANSI-teckentabell genom att använda kommandot \f(CW\*(C`chcp\*(C'\fR, eftersom dos2unix använder Windows-systemets teckentabell.
.Sp
Nackdelen med ansi är att internationella filnamn med tecken som inte finns i systemets standardteckentabell inte visas korrekt. Du kommer att se frågetecken, eller en felaktig symbol istället. När du inte arbetar med utländska filnamn är denna metoden \s-1OK.\s0
.IP "\fBunicode, unicodebom\fR" 4
.IX Item "unicode, unicodebom"
Fördelen med unicode-kodning (Windows-namnet för \s-1UTF\-16\s0) är att text vanligtvis visas korrekt. Det finns inget behov av att ändra den aktiva teckentabellen. Du kan behöva ställa in konsolens teckensnitt till ett TrueType-teckensnitt för att få internationella tecken att visas korrekt. När ett tecken inte finns inkluderat i TrueType-teckensnittet kommer du vanligtvis att se en liten ruta, ibland med ett frågetecken inuti.
.Sp
När du använder ConEmu-konsolen kommer all text att visas korrekt eftersom ConEmu automatiskt väljer ett bra teckensnitt.
.Sp
Nackdelen med unicode är att den inte är kompatibel med \s-1ASCII.\s0 Utmatningen är inte lätt att hantera när du omdirigerar den till ett annat program eller en fil.
.Sp
När metod \f(CW\*(C`unicodebom\*(C'\fR används kommer Unicode-texten att föregås av en \s-1BOM\s0 (byteordningsmarkering, Byte Order Mark). En \s-1BOM\s0 krävs för korrekt omdirigering eller rörledning i PowerShell.
.IP "\fButf8, utf8bom\fR" 4
.IX Item "utf8, utf8bom"
Fördelen med utf8 är att den är kompatibel med \s-1ASCII.\s0 Du måste ställa in konsolens teckensnitt till ett TrueType-teckensnitt. Med ett TrueType-teckensnitt kommer text att visas på liknande sätt som med \f(CW\*(C`unicode\*(C'\fR\-kodningen.
.Sp
Nackdelen är att när du använder standardrasterteckensnittet kommer alla icke-ASCII tecken att visas fel. Inte enbart unicode-filnamn, utan också översatta meddelanden kommer att bli oläsbara. Under Windows som konfigurerats för Östasien kan man komma att se många blinkningar i konsolen när meddelanden visas.
.Sp
I ConEmu-konsolen fungerar utf8\-kodningsmetoden väl.
.Sp
När metod \f(CW\*(C`utf8bom\*(C'\fR används kommer UTF\-8\-texten att föregås av en \s-1BOM\s0 (byteordningsmarkering, Byte Order Mark). En \s-1BOM\s0 krävs för korrekt omdirigering eller rörledning i PowerShell.
.RE
.RS 4
.Sp
Standardkodningen kan ändras via miljövariabeln \s-1DOS2UNIX_DISPLAY_ENC\s0 genom att sätta den till \f(CW\*(C`unicode\*(C'\fR, \f(CW\*(C`unicodebom\*(C'\fR, \f(CW\*(C`utf8\*(C'\fR or \f(CW\*(C`utf8bom\*(C'\fR.
.RE
.IP "\fB\-e, \-\-add\-eol\fR" 4
.IX Item "-e, --add-eol"
Lägg till en radbrytning på sista raden om det inte finns någon. Detta fungerar för alla konverteringar.
.Sp
En fil konverterad från \s-1DOS\-\s0 till Unix-format kan sakna en radbrytning på sista raden. Det finns textredigerare som skriver textfiler utan en radbrytning på den sista raden. Vissa Unix-program har problem med att behandla dessa filer, då POSIX-standarden definierar det som att varje rad i en textfil måste har ett avslutande nyradstecken. Att konkatenera filer kan till exempel ge oväntat resultat.
.IP "\fB\-f, \-\-force\fR" 4
.IX Item "-f, --force"
Tvinga konvertering av binära filer.
.IP "\fB\-gb, \-\-gb18030\fR" 4
.IX Item "-gb, --gb18030"
Under Windows konverteras UTF\-16\-filer som standard till \s-1UTF\-8,\s0 oavsett vilken lokalinställning som är gjord. Använd denna flagga för att konvertera UTF\-16\-filer till \s-1GB18030.\s0 Denna flagga finns bara tillgänglig i Windows. Se vidare i avsnittet \s-1GB18030.\s0
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Visa hjälptext och avsluta.
.IP "\fB\-i[\s-1FLAGGOR\s0], \-\-info[=FLAGGOR] \s-1FIL ...\s0\fR" 4
.IX Item "-i[FLAGGOR], --info[=FLAGGOR] FIL ..."
Visa filinformation. Ingen konvertering görs.
.Sp
Följande information skrivs ut, i denna ordningen: antal DOS-radbrytningar, antal Unix-radbrytningar, antal Mac-radbrytningar, byteordningsmarkeringen, text eller binär, filnamn.
.Sp
Exempelutmatning:
.Sp
.Vb 8
\&     6       0       0  no_bom    text    dos.txt
\&     0       6       0  no_bom    text    unix.txt
\&     0       0       6  no_bom    text    mac.txt
\&     6       6       6  no_bom    text    mixed.txt
\&    50       0       0  UTF\-16LE  text    utf16le.txt
\&     0      50       0  no_bom    text    utf8unix.txt
\&    50       0       0  UTF\-8     text    utf8dos.txt
\&     2     418     219  no_bom    binär   dos2unix.exe
.Ve
.Sp
Notera att en binärfil ibland kan misstas för en textfil. Se vidare flaggan \f(CW\*(C`\-s\*(C'\fR.
.Sp
Om dessutom flaggan \f(CW\*(C`\-e\*(C'\fR eller \f(CW\*(C`\-\-add\-eol\*(C'\fR används så kommer även den radbrytning som används på sista raden att skrivas ut, eller \f(CW\*(C`noeol\*(C'\fR om det inte finns någon.
.Sp
Exempelutmatning:
.Sp
.Vb 4
\&     6       0       0  no_bom    text   dos     dos.txt
\&     0       6       0  no_bom    text   unix    unix.txt
\&     0       0       6  no_bom    text   mac     mac.txt
\&     1       0       0  no_bom    text   noeol   noeol_dos.txt
.Ve
.Sp
Extra flaggor kan användas valfritt för att ändra utmatningen. En eller fler flaggor kan läggas till.
.RS 4
.IP "\fB0\fR" 4
.IX Item "0"
Skriv ut filinformationsraderna följt av ett null-tecken istället för ett nyradstecken. Detta möjliggör korrekt tolkning av filnamn med blanksteg eller citationstecken när c\-flaggan används. Använd denna flagga i kombination med \fBxargs\fR\|(1):s flagga \f(CW\*(C`\-0\*(C'\fR eller \f(CW\*(C`\-\-null\*(C'\fR.
.IP "\fBd\fR" 4
.IX Item "d"
Skriv ut antal DOS-radbrytningar.
.IP "\fBu\fR" 4
.IX Item "u"
Skriv ut antal Unix-radbrytningar.
.IP "\fBm\fR" 4
.IX Item "m"
Skriv ut antal Mac-radbrytningar.
.IP "\fBb\fR" 4
.IX Item "b"
Skriv ut byteordningsmarkeringen.
.IP "\fBt\fR" 4
.IX Item "t"
Skriv ut om filen är text eller binär.
.IP "\fBe\fR" 4
.IX Item "e"
Skriv ut radbrytningstypen på sista raden, eller \f(CW\*(C`noeol\*(C'\fR om det inte finns någon.
.IP "\fBc\fR" 4
.IX Item "c"
Skriv bara ut filerna som skulle ha konverterats.
.Sp
Med \f(CW\*(C`c\*(C'\fR\-flaggan kommer dos2unix att skriva ut filerna som innehåller DOS-radbrytningar, unix2dos kommer bara att skriva ut filnamn som har Unix-radbrytningar.
.Sp
Om dessutom flaggan \f(CW\*(C`\-e\*(C'\fR eller \f(CW\*(C`\-\-add\-eol\*(C'\fR används så kommer även filer som saknar en radbrytning på sista raden att skrivas ut.
.IP "\fBh\fR" 4
.IX Item "h"
Skriv ut rubrik.
.IP "\fBp\fR" 4
.IX Item "p"
Visa filnamn utan sökväg.
.RE
.RS 4
.Sp
Exempel:
.Sp
Visa information för alla *.txt\-filer:
.Sp
.Vb 1
\&    dos2unix \-i *.txt
.Ve
.Sp
Visa bara antalet DOS-radbrytningar och Unix-radbrytningar:
.Sp
.Vb 1
\&    dos2unix \-idu *.txt
.Ve
.Sp
Visa bara byteordningsmarkeringen:
.Sp
.Vb 1
\&    dos2unix \-\-info=b *.txt
.Ve
.Sp
Lista filerna som har DOS-radbrytningar:
.Sp
.Vb 1
\&    dos2unix \-ic *.txt
.Ve
.Sp
Lista filerna som har Unix-radbrytningar:
.Sp
.Vb 1
\&    unix2dos \-ic *.txt
.Ve
.Sp
Lista filerna som har DOS-radbrytningar eller saknar en radbrytning på sista raden:
.Sp
.Vb 1
\&    dos2unix \-e \-ic *.txt
.Ve
.Sp
Konvertera endast filer som har DOS-radbrytningar och lämna övriga filer orörda:
.Sp
.Vb 1
\&    dos2unix \-ic0 *.txt | xargs \-0 dos2unix
.Ve
.Sp
Hitta textfiler som har DOS-radbrytningar:
.Sp
.Vb 1
\&    find \-name \*(Aq*.txt\*(Aq \-print0 | xargs \-0 dos2unix \-ic
.Ve
.RE
.IP "\fB\-k, \-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
Behåll infilens datumstämpel för utfilen.
.IP "\fB\-L, \-\-license\fR" 4
.IX Item "-L, --license"
Visa programmets licens.
.IP "\fB\-l, \-\-newline\fR" 4
.IX Item "-l, --newline"
Lägg till ytterligare nyrad.
.Sp
\&\fBdos2unix\fR: Endast DOS-radbrytningar ändras till två Unix-radbrytningar. I Mac\-läge ändras endast Mac-radbrytningar till två Unix-radbrytningar.
.Sp
\&\fBunix2dos\fR: Endast Unix-radbrytningar ändras till två DOS-radbrytningar. I Mac\-läge ändras Unix-radbrytningar till två Mac-radbrytningar.
.IP "\fB\-m, \-\-add\-bom\fR" 4
.IX Item "-m, --add-bom"
Skriv en byteordningsmarkering (Byte Order Mark, \s-1BOM\s0) i utfilen. Som standard skrivs en \s-1UTF\-8 BOM.\s0
.Sp
När infilen är \s-1UTF\-16,\s0 och flaggan \f(CW\*(C`\-u\*(C'\fR används, kommer en \s-1UTF\-16 BOM\s0 att skrivas.
.Sp
Använd aldrig denna flagga när kodningen för utmatning är något annat än \s-1UTF\-8, UTF\-16\s0 eller \s-1GB18030.\s0 Se vidare i avsnittet \s-1UNICODE.\s0
.IP "\fB\-n, \-\-newfile \s-1INFIL UTFIL\s0 …\fR" 4
.IX Item "-n, --newfile INFIL UTFIL …"
Nyfilsläge. Konvertera filen \s-1INFIL\s0 och skriv utfilen \s-1UTFIL.\s0 Filnamnen måste ange i par och jokertecken i namnen ska \fIinte\fR användas annars \fIkommer\fR du att förlora filer.
.Sp
Användaren som påbörjar konverteringen i nyfilsläge (parat läge) kommer att bli ägaren till den konverterade filen. Läs\-/skrivbehörigheter för den nya filen kommer att vara samma behörigheter som för originalfilen minus \fBumask\fR\|(1) för användaren som kör konverteringen.
.IP "\fB\-\-no\-allow\-chown\fR" 4
.IX Item "--no-allow-chown"
Tillåt inte ändring av ägarskap i gammalt filläge (standard)
.Sp
Avbryt konvertering när användar\- och/eller gruppägarskap för originalfilen inte kan bevaras i gammalt filläge. Se också flaggorna \f(CW\*(C`\-o\*(C'\fR och \f(CW\*(C`\-n\*(C'\fR. Denna flagga är endast tillgänglig om dos2unix har stöd för att bevara användar\- och gruppägarskap för filer.
.IP "\fB\-\-no\-add\-eol\fR" 4
.IX Item "--no-add-eol"
Lägg inte till en radbrytning på den sista raden om det inte finns någon.
.IP "\fB\-O, \-\-to\-stdout\fR" 4
.IX Item "-O, --to-stdout"
Skriv till standard ut som ett Unix-filter. Använd flaggan \f(CW\*(C`\-o\*(C'\fR för att återgå till det gamla (på\-plats) filläget.
.Sp
Kombinerat med flaggan \f(CW\*(C`\-e\*(C'\fR kan filer konkateneras korrekt. Inga sammanfogade sista och första rader, och inga Unicode byteordningsmarkeringar i mitten på den konkatenerade filen. Exempel:
.Sp
.Vb 1
\&    dos2unix \-e \-O fil1.txt fil2.txt > ut.txt
.Ve
.IP "\fB\-o, \-\-oldfile \s-1FIL\s0 …\fR" 4
.IX Item "-o, --oldfile FIL …"
Gammalfilsläge. Konvertera filen \s-1FIL\s0 och skriv över den med utmatningen. Programmet kör i detta läge som standard. Jokertecken i filnamn får användas.
.Sp
I gammalfilsläge (på\-plats läge) kommer den konverterade filen att få samma ägare, grupp samt läs\-/skrivbehörigheter som originalfilen. Även då filen konverteras av en annan användare som har skrivbehörighet för filen (t.ex. användaren root). Konverteringen kommer att avbrytas när det inte är möjligt att bevara originalvärdena. Byte av ägare skulle kunna innebära att originalägaren inte längre kan läsa filen. Byte av grupp skulle kunna vara en säkerhetsrisk, filen skulle kunna bli läsbar för användare som den inte är avsedd för.  Stöd för bevarande av ägare, grupp och läs\-/skrivbehörigheter finns bara i Unix.
.Sp
För att kontrollera om dos2unix har stöd för att bevara användar\- och gruppägarskap för filer skriv \f(CW\*(C`dosunix \-V\*(C'\fR.
.Sp
Konvertering görs alltid via en temporärfil. När ett fel inträffar halvvägs i konverteringen tas den temporära filen bort och originalfilen finns kvar intakt. Om konverteringen är framgångsrik kommer originalfilen att ersättas med temporärfilen. Du kanske har skrivrättigheter till originalfilen men inte rättigheter att ställa in samma användar\- och/eller grupprättighetsegenskaper på temporärfilen som originalfilen har. Detta innebär att du inte kan bevara användar\- och/eller gruppägarskapet för originalfilen. I detta fall kan du använda flaggan \f(CW\*(C`\-\-allow\-chown\*(C'\fR för att fortsätta konverteringen:
.Sp
.Vb 1
\&    dos2unix \-\-allow\-chown foo.txt
.Ve
.Sp
Ett annat alternativ är att använda nyfilsläge:
.Sp
.Vb 1
\&    dos2unix \-n foo.txt foo.txt
.Ve
.Sp
Fördelen med flaggan \f(CW\*(C`\-\-allow\-chown\*(C'\fR är att du kan använda jokertecken och att ägarskapsegenskaper om möjligt kommer att bevaras.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Tyst drift. Undertryck alla varningar och meddelanden. Returvärdet är noll. Utom när felaktiga kommandoradsflaggor används.
.IP "\fB\-r, \-\-remove\-bom\fR" 4
.IX Item "-r, --remove-bom"
Ta bort byteordningsmarkering (Byte Order Mark, \s-1BOM\s0). Skriv inte en \s-1BOM\s0 i utfilen. Detta är standardbeteende vid konvertering av Unix-radbrytningar. Se vidare flaggan \f(CW\*(C`\-b\*(C'\fR.
.IP "\fB\-s, \-\-safe\fR" 4
.IX Item "-s, --safe"
Hoppa över binära filer (standard).
.Sp
Binärfiler hoppas över för att undvika oavsiktliga misstag. Var medveten om att detektering av binärfiler inte är 100% säker. Infiler genomsöks efter binära symboler som typiskt inte återfinns i textfiler. Det är möjligt att en binärfil enbart innehåller texttecken. En sådan binärfil kommer oavsiktligt att ses som en textfil.
.IP "\fB\-u, \-\-keep\-utf16\fR" 4
.IX Item "-u, --keep-utf16"
Behåll infilens original UTF\-16\-kodning. Utfilen kommer att skrivas med samma UTF\-16\-kodning som infilen, omvänd eller rak byteordning (little eller big endian). Detta förhindrar transformation till \s-1UTF\-8.\s0 En \s-1UTF\-16 BOM\s0 kommer att skrivas i enlighet med detta. Denna flagga kan inaktiveras med \f(CW\*(C`\-ascii\*(C'\fR\-flaggan.
.IP "\fB\-ul, \-\-assume\-utf16le\fR" 4
.IX Item "-ul, --assume-utf16le"
Antag att infilsformatet är \s-1UTF\-16LE.\s0
.Sp
När det finns en byteordningsmarkering (Byte Order Mark) i infilen så har BOM:en högre prioritet än denna flagga.
.Sp
När du har gjort fel antagande (infilen var inte i UTF\-16LE\-format) och konverteringens lyckas, kommer du att få en \s-1UTF\-8\s0 utfil med felaktig text. Du kan göra denna konvertering ogjord med \fBiconv\fR\|(1) genom att konvertera \s-1UTF\-8\s0 utfilen tillbaka till \s-1UTF\-16LE.\s0 Detta kommer att återskapa originalfilen.
.Sp
Antagandet om \s-1UTF\-16LE\s0 fungerar som ett \fIkonverteringsläge\fR. Genom att växla till standard \fIascii\fR\-läget kommer \s-1UTF\-16LE\s0 antagandet att stängas av.
.IP "\fB\-ub, \-\-assume\-utf16be\fR" 4
.IX Item "-ub, --assume-utf16be"
Antag att infilsformatet är \s-1UTF\-16BE.\s0
.Sp
Denna flagga fungerar på samma sätt som flaggan \f(CW\*(C`\-ul\*(C'\fR.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
Visa utförliga meddelanden. Extra information visas om byteordningsmarkeringar och antalet konverterade radbrytningar.
.IP "\fB\-F, \-\-follow\-symlink\fR" 4
.IX Item "-F, --follow-symlink"
Följ symboliska länkar och konvertera målen.
.IP "\fB\-R, \-\-replace\-symlink\fR" 4
.IX Item "-R, --replace-symlink"
Ersätt symboliska länkar med konverterade filer (originalmålfilerna förblir oförändrade).
.IP "\fB\-S, \-\-skip\-symlink\fR" 4
.IX Item "-S, --skip-symlink"
Behåll symboliska länkar och mål oförändrade (standard).
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Visa versionsinformation och avsluta.
.SH "MAC\-LÄGE"
.IX Header "MAC-LÄGE"
Som standard konverteras radbrytningar från \s-1DOS\s0 till Unix och vice versa. Mac-radbrytningar konverteras inte.
.PP
I Mac\-läge konverteras radbrytningar från Mac till Unix och vice versa. DOS-radbrytningar ändras ej.
.PP
För att köra i Mac\-läge använd kommandoradsflaggan \f(CW\*(C`\-c mac\*(C'\fR eller använd kommandona \f(CW\*(C`mac2unix\*(C'\fR eller \f(CW\*(C`unix2mac\*(C'\fR.
.SH "KONVERTERINGSLÄGEN"
.IX Header "KONVERTERINGSLÄGEN"
.IP "\fBascii\fR" 4
.IX Item "ascii"
Detta är standardkonverteringsläget. Detta läge används för att konvertera \s-1ASCII\s0 och ASCII-kompatibla kodade filer, så som \s-1UTF\-8.\s0 Att aktiveras \fBascii\fR\-läge inaktiverar \fB7bit\fR\- och \fBiso\fR\-läge.
.Sp
Om dos2unix har \s-1UTF\-16\s0 stöd kommer UTF\-16\-kodade filer att konverteras till kodningen för den aktuella lokalen på POSIX-sytstem och till \s-1UTF\-8\s0 på Windows. Aktivering av \fBascii\fR\-läget inaktiverar flaggan för att behålla UTF\-16\-kodning (\f(CW\*(C`\-u\*(C'\fR) och flaggorna för att anta \s-1UTF\-16\s0 indata (\f(CW\*(C`\-ul\*(C'\fR och \f(CW\*(C`\-ub\*(C'\fR). För att se om dos2unix har UTF\-16\-stöd skriv \f(CW\*(C`dox2unix \-V\*(C'\fR, se också avsnittet \s-1UNICODE.\s0
.IP "\fB7bit\fR" 4
.IX Item "7bit"
I detta läge konverteras alla 8\-bitars icke-ASCII tecken (med värden från 128 till 255) till ett 7\-bitars blanksteg.
.IP "\fBiso\fR" 4
.IX Item "iso"
Tecken konverteras mellan \s-1DOS\s0 teckenuppsättning (teckentabell) och \s-1ISO\s0 teckenuppsättning \s-1ISO\-8859\-1\s0 (Latin\-1) på Unix. \s-1DOS\s0 tecken utan motsvarande \s-1ISO\-8859\-1\s0 tecken, för vilka konvertering är omöjligt, kommer att ersättas med en punkt. Detsamma gäller för \s-1ISO\-8859\-1\s0 tecken utan motsvarighet i \s-1DOS.\s0
.Sp
När enbart flaggan \f(CW\*(C`\-iso\*(C'\fR används kommer dos2unix att försöka avgöra den aktiva teckentabellen. När detta inte är möjligt kommer dos2unix att använda standardteckentabellen \s-1CP437,\s0 vilken huvudsakligen används i \s-1USA.\s0 För att tvinga en specifik teckentabell använd flaggorna \f(CW\*(C`\-437\*(C'\fR (\s-1USA\s0), \f(CW\*(C`\-850\*(C'\fR (Västeuropeisk), \f(CW\*(C`\-860\*(C'\fR (Portugisisk), \f(CW\*(C`\-863\*(C'\fR (Fransk-kanadensisk) eller \f(CW\*(C`\-865\*(C'\fR (Nordisk). Det finns också stöd för Windows-teckentabell \s-1CP\-1252\s0 (Västeuropeisk) via flaggan \f(CW\*(C`\-1252\*(C'\fR. För andra teckentabeller använd dos2unix i kombination med \fBiconv\fR\|(1). iconv kan konvertera mellan en lång lista av teckenkodningar.
.Sp
Använd aldrig ISO-konvertering på Unicode-textfiler. Det kommer att korrumpera UTF\-8\-kodade filer.
.Sp
Några exempel:
.Sp
Konvertera från \s-1DOS\s0 standardteckentabell till Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-iso \-n in.txt ut.txt
.Ve
.Sp
Konvertera från \s-1DOS CP850\s0 till Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-850 \-n in.txt ut.txt
.Ve
.Sp
Konvertera från Windows \s-1CP1252\s0 till Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-1252 \-n in.txt ut.txt
.Ve
.Sp
Konvertera från Windows \s-1CP1252\s0 till Unix \s-1UTF\-8\s0 (Unicode):
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t UTF\-8 in.txt | dos2unix > ut.txt
.Ve
.Sp
Konvertera från Unix Latin\-1 till DOS-standardteckentabell:
.Sp
.Vb 1
\&    unix2dos \-iso \-n in.txt ut.txt
.Ve
.Sp
Konvertera från Unix Latin\-1 till \s-1DOS CP850:\s0
.Sp
.Vb 1
\&    unix2dos \-850 \-n in.txt ut.txt
.Ve
.Sp
Konvertera från Unix Latin\-1 till Windows \s-1CP1252:\s0
.Sp
.Vb 1
\&    unix2dos \-1252 \-n in.txt ut.txt
.Ve
.Sp
Konvertera från Unix \s-1UTF\-8\s0 (Unicode) till Windows \s-1CP1252:\s0
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t CP1252 > ut.txt
.Ve
.Sp
Se även <http://czyborra.com/charsets/codepages.html> och <http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
.SS "Kodningar"
.IX Subsection "Kodningar"
Det finns flera olika Unicode kodningar. I Unix och Linux kodas filer vanligtvis med UTF\-8\-kodning. I Windows kan Unicode-textfiler kodas i \s-1UTF\-8, UTF\-16\s0 eller \s-1UTF\-16\s0 rak byteordning (big endian), men kodas mestadels i UTF\-16\-format.
.SS "Konvertering"
.IX Subsection "Konvertering"
Unicode-textfiler kan ha \s-1DOS,\s0 Unix eller Mac-radbrytningar precis som ASCII-textfiler.
.PP
Alla versioner av dos2unix och unix2dos kan konvertera UTF\-8\-kodade filer, eftersom \s-1UTF\-8\s0 designades för bakåtkompatibilitet med \s-1ASCII.\s0
.PP
Dos2unix och unix2dos med Unicode\-UTF\-16\-stöd, kan läsa UTF\-16\-kodade textfiler i omvänd och rak byteordning (little och big endian). För att se om dos2unix byggts med UTF\-16\-stöd skriv \f(CW\*(C`dos2unix \-V\*(C'\fR.
.PP
Under Unix/Linux kommer UTF\-16\-kodade filer att konverteras till lokalens teckenkodning. Använd kommandot \fBlocale\fR\|(1) för att ta reda på vilken lokalens teckenkodning är. När konvertering inte är möjlig kommer ett konverteringsfel att inträffa och filen kommer att hoppas över.
.PP
Under Windows konverteras UTF\-16\-filer som standard till \s-1UTF\-8.\s0 UTF\-8\-formaterade textfiler har bra stöd både under Windows och Unix/Linux.
.PP
\&\s-1UTF\-16\-\s0 och UTF\-8\-kodning är fullt kompatibla, ingen text kommer att gå förlorad i konverteringen. När ett \s-1UTF\-16\s0 till UTF\-8\-konverteringsfel uppstår, till exempel när infilen i UTF\-16\-format innehåller ett fel, kommer att filen att hoppas över.
.PP
När flaggan \f(CW\*(C`\-u\*(C'\fR används kommer utfilen att skrivas med samma UTF\-16\-kodning som infilen. Flaggan \f(CW\*(C`\-u\*(C'\fR förhindrar konvertering till \s-1UTF\-8.\s0
.PP
Dos2unix och unix2dos har ingen flagga för att konvertera UTF\-8\-filer till \s-1UTF\-16.\s0
.PP
\&\s-1ISO\-\s0 och 7\-bitarslägeskonvertering fungerar inte på UTF\-16\-filer.
.SS "Byteordningsmarkering (Byte Order Mark)"
.IX Subsection "Byteordningsmarkering (Byte Order Mark)"
I Windows har Unicode-textfiler typiskt en byteordningsmarkering (Byte Order Mark, \s-1BOM\s0) eftersom många Windows-program (inklusive Notepad) lägger till BOM:ar som standard. Se även <https://en.wikipedia.org/wiki/Byte_order_mark>.
.PP
I Unix har Unicode-textfiler typiskt ingen \s-1BOM.\s0 Filer antas vara kodade i den lokala teckenuppsättningen.
.PP
Dos2Unix kan bara detektera om en fil är i UTF\-16\-format om filen har en \s-1BOM.\s0 När en UTF\-16\-fil inte har en \s-1BOM\s0 så kommer dos2unix att de filen som en binärfil.
.PP
Använd flaggan \f(CW\*(C`\-ul\*(C'\fR eller \f(CW\*(C`\-ub\*(C'\fR för att konvertera en UTF\-16\-fil utan \s-1BOM.\s0
.PP
Dos2unix skriver som standard ingen \s-1BOM\s0 i utfilen. Med flaggan \f(CW\*(C`\-b\*(C'\fR kommer Dos2unix att skriva en \s-1BOM\s0 när infilen har en \s-1BOM.\s0
.PP
Unix2dos skriver som standard en \s-1BOM\s0 i utfilen när infilen har en \s-1BOM.\s0 Använd flaggan \f(CW\*(C`\-r\*(C'\fR för att ta bort BOM:en.
.PP
Dos2unix och unix2dos skriver alltid en \s-1BOM\s0 när flaggan \f(CW\*(C`\-m\*(C'\fR används.
.SS "Unicode-filnamn under Windows"
.IX Subsection "Unicode-filnamn under Windows"
Dos2unix har valfritt stöd för läsning och skrivning av Unicode-filnamn i Windows kommandoprompt. Detta innebär att dos2unix kan öppna filer som har tecken i sina namn som inte är en del av systemets atandard ANSI-teckentabell. För att se om dos2unix för Windows byggdes med stöd för Unicode-filnamn skriv \f(CW\*(C`dos2unix \-V\*(C'\fR.
.PP
Det finns en del problem med att visa Unicode-filnamn i en Windows-konsol. Se vidare flaggan \f(CW\*(C`\-D\*(C'\fR, \f(CW\*(C`\-\-display\-enc\*(C'\fR. Filnamnen kan visas felaktigt i konsolen, men filerna som skrivs kommer att ha de korrekta namnen.
.SS "Unicode-exempel"
.IX Subsection "Unicode-exempel"
Konvertera från Windows \s-1UTF\-16\s0 (med \s-1BOM\s0) till Unix \s-1UTF\-8:\s0
.PP
.Vb 1
\&    dos2unix \-n in.txt ut.txt
.Ve
.PP
Konvertera från Windows \s-1UTF\-16LE\s0 (utan \s-1BOM\s0) till Unix \s-1UTF\-8:\s0
.PP
.Vb 1
\&    dos2unix \-ul \-n in.txt ut.txt
.Ve
.PP
Konvertera från Unix \s-1UTF\-8\s0 till Windows \s-1UTF\-8\s0 med \s-1BOM:\s0
.PP
.Vb 1
\&    unix2dos \-m \-n in.txt ut.txt
.Ve
.PP
Konvertera från Unix \s-1UTF\-8\s0 till Windows \s-1UTF\-16:\s0
.PP
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t UTF\-16 > ut.txt
.Ve
.SH "GB18030"
.IX Header "GB18030"
\&\s-1GB18030\s0 är en standard från Kinesiska regeringen. En obligatorisk delmängd av standarden \s-1GB18030\s0 krävs officiellt för alla programvaruprodukter som säljs i Kina. Se vidare <https://en.wikipedia.org/wiki/GB_18030>.
.PP
\&\s-1GB18030\s0 är fullständigt kompatibel med Unicode och kan anses vara ett överföringsformat för unicode. Precis som \s-1UTF\-8\s0 är \s-1GB18030\s0 kompatibel med \s-1ASCII. GB18030\s0 är också kompatibel med Windows-teckentabell 936, också känd som \s-1GBK.\s0
.PP
Under Unix/Linux kommer UTF\-16\-filer att konverteras till \s-1GB18030\s0 när lokalens teckenkodning är inställd på \s-1GB18030.\s0 Notera att detta endast kommer att fungera om lokalen har stöd i systemet. Använd kommandot \f(CW\*(C`locale \-a\*(C'\fR för att få en lista över de lokaler som stöds.
.PP
Under Windows måste du använda flaggan \f(CW\*(C`\-gb\*(C'\fR för att konvertera UTF\-16\-filer till \s-1GB18030.\s0
.PP
GB18030\-kodade filer kan ha en byteordningsmarkering, precis som Unicode-filer.
.SH "EXEMPEL"
.IX Header "EXEMPEL"
Läsa inmatning från “stdin“ och skriv utmatning till “stdout“:
.PP
.Vb 2
\&    dos2unix < a.txt
\&    cat a.txt | dos2unix
.Ve
.PP
Konvertera och ersätta a.txt. Konvertera och ersätt b.txt:
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix \-o a.txt b.txt
.Ve
.PP
Konvertera och ersätt a.txt i ascii\-konverteringsläge:
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
Konvertera och ersätt a.txt i ascii\-konverteringsläge, konvertera och ersätt b.txt i 7bit\-konverteringsläge:
.PP
.Vb 3
\&    dos2unix a.txt \-c 7bit b.txt
\&    dos2unix \-c ascii a.txt \-c 7bit b.txt
\&    dos2unix \-ascii a.txt \-7 b.txt
.Ve
.PP
Konvertera a.txt från Mac\- till Unix-format:
.PP
.Vb 2
\&    dos2unix \-c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
Konvertera a.txt från Unix\- till Mac-format:
.PP
.Vb 2
\&    unix2dos \-c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
Konvertera och ersätt a.txt medan originalet tidsstämpel behålls:
.PP
.Vb 2
\&    dos2unix \-k a.txt
\&    dos2unix \-k \-o a.txt
.Ve
.PP
Konvertera a.txt och skriv till e.txt:
.PP
.Vb 1
\&    dos2unix \-n a.txt e.txt
.Ve
.PP
Konvertera a.txt och skriv till e.txt, låt e.txt behålla tidsstämpeln från a.txt:
.PP
.Vb 1
\&    dos2unix \-k \-n a.txt e.txt
.Ve
.PP
Konvertera och ersätt a.txt, konvertera b.txt och skriv till e.txt:
.PP
.Vb 2
\&    dos2unix a.txt \-n b.txt e.txt
\&    dos2unix \-o a.txt \-n b.txt e.txt
.Ve
.PP
Konvertera c.txt och skriv till e.txt, konvertera och ersätt a.txt, konvertera och ersätt b.txt, konvertera d.txt och skriv till f.txt:
.PP
.Vb 1
\&    dos2unix \-n c.txt e.txt \-o a.txt b.txt \-n d.txt f.txt
.Ve
.SH "REKURSIV KONVERTERING"
.IX Header "REKURSIV KONVERTERING"
I ett Unix-skal kan kommandona \fBfind\fR\|(1) och \fBxargs\fR\|(1) användas för att köra dos2unix rekursivt över alla textfiler i ett katalogträd. För att till exempel konvertera alla .txt\-filer i katalogträdet under den aktuella katalogen skriv:
.PP
.Vb 1
\&    find . \-name \*(Aq*.txt\*(Aq \-print0 |xargs \-0 dos2unix
.Ve
.PP
Flaggan \f(CW\*(C`\-print0\*(C'\fR till \fBfind\fR\|(1) och motsvarande flagga \f(CW\*(C`\-0\*(C'\fR till \fBxargs\fR\|(1) behövs när det finns filer med mellanslag eller citationstecken i namnet. Annars kan dessa flaggor utelämnas. Ett annat alternativ är att användas \fBfind\fR\|(1) med flaggan \f(CW\*(C`\-exec\*(C'\fR:
.PP
.Vb 1
\&    find . \-name \*(Aq*.txt\*(Aq \-exec dos2unix {} \e;
.Ve
.PP
I en Windows-kommandoprompt kan följande kommando användas:
.PP
.Vb 1
\&    for /R %G in (*.txt) do dos2unix "%G"
.Ve
.PP
PowerShell\-användare kan använda följande kommando i Windows PowerShell:
.PP
.Vb 1
\&    get\-childitem \-path . \-filter \*(Aq*.txt\*(Aq \-recurse | foreach\-object {dos2unix $_.Fullname}
.Ve
.SH "LOKALISERING"
.IX Header "LOKALISERING"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
Det primära språket väljs med miljövariabeln \s-1LANG.\s0 LANG-variabeln består av flera delas. Den första delen är språkkoden i gemener. Den andra delen är valfri och utgör landskoden i versaler, föregången av ett understreck. Det finns också en valfri tredje del: teckenkodning, föregången av en punkt. Ett par exempel för skal av POSIX-standard-typ:
.Sp
.Vb 7
\&    export LANG=nl               Nederländska
\&    export LANG=nl_NL            Nederländska, Nederländerna
\&    export LANG=nl_BE            Nederländska, Belgien
\&    export LANG=es_ES            Spanska, Spanien
\&    export LANG=es_MX            Spanska, Mexiko
\&    export LANG=en_US.iso88591   Engelska, USA, Latin\-1\-kodning
\&    export LANG=en_GB.UTF\-8      Engelska, UK, UTF\-8\-kodning
.Ve
.Sp
För en fullständig lista över språk och landskoder se vidare i gettext-manualen: <https://www.gnu.org/software/gettext/manual/html_node/Usual\-Language\-Codes.html>
.Sp
På Unix-system kan du använda kommando \fBlocale\fR\|(1) för att få lokal-specifik information.
.IP "\fB\s-1LANGUAGE\s0\fR" 4
.IX Item "LANGUAGE"
Med miljövariabeln \s-1LANGUAGE\s0 kan du ange en prioritetslista över språk, separerade med kolon. Dos2unix kommer att ge företräde till \s-1LANGAUGE\s0 över \s-1LANG.\s0 Exempelvis först nederländska och sedan tyska: \f(CW\*(C`LANGUAGE=nl:de\*(C'\fR. Du måste först ha aktiverat lokalisering, genom att sätta \s-1LANG\s0 (eller \s-1LC_ALL\s0) till ett värde annat än “C“, innan du kan använda en prioritetslista för språk via LANGUAGE-variabeln. Se vidare i gettext-manualen: <https://www.gnu.org/software/gettext/manual/html_node/The\-LANGUAGE\-variable.html>
.Sp
Om du väljer ett språk som inte är tillgänglig kommer du att få engelska meddelanden som standard.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
Med miljövariabeln \s-1DOS2UNIX_LOCALEDIR\s0 kan \s-1LOCALEDIR\s0 som ställts in vid kompilering åsidosättas. \s-1LOCALEDIR\s0 används för att hitta språkfiler. Standardvärdet för GNU-program är \f(CW\*(C`/usr/local/share/locale\*(C'\fR. Flaggan \fB\-\-version\fR kommer att visa vilken \s-1LOCALEDIR\s0 som används.
.Sp
Exempel (POSIX-skal):
.Sp
.Vb 1
\&    export DOS2UNIX_LOCALEDIR=$HOME/share/locale
.Ve
.SH "RETURVÄRDE"
.IX Header "RETURVÄRDE"
Om allt går bra kommer noll att returneras. När ett systemfel uppstår kommer det senaste systemfelet att returneras. För andra fel kommer 1 att returneras.
.PP
Returvärdet är alltid noll i tyst läge, utom när felaktiga kommandoradsflaggor används.
.SH "STANDARDER"
.IX Header "STANDARDER"
<https://en.wikipedia.org/wiki/Text_file>
.PP
<https://en.wikipedia.org/wiki/Carriage_return>
.PP
<https://en.wikipedia.org/wiki/Newline>
.PP
<https://en.wikipedia.org/wiki/Unicode>
.SH "FÖRFATTARE"
.IX Header "FÖRFATTARE"
Benjamin Lin \- <blin@socs.uts.edu.au>, Bernd Johannes Wuebben (mac2unix\-läge) \- <wuebben@kde.org>, Christian Wurll (lägg till en extra radbrytning) \- <wurll@ira.uka.de>, Erwin Waterlander \- <waterlan@xs4all.nl> (upphovsman)
.PP
Projektsida: <https://waterlan.home.xs4all.nl/dos2unix.html>
.PP
SourceForge-sida: <https://sourceforge.net/projects/dos2unix/>
.SH "SE ÄVEN"
.IX Header "SE ÄVEN"
\&\fBfile\fR\|(1)  \fBfind\fR\|(1)  \fBiconv\fR\|(1)  \fBlocale\fR\|(1)  \fBxargs\fR\|(1)
