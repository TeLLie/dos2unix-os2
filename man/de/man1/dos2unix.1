.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2024-01-22" "dos2unix" "2024-01-22"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BEZEICHNUNG"
.IX Header "BEZEICHNUNG"
dos2unix \- Formatumwandlung für Textdateien von DOS/Mac nach Unix und umgekehrt
.SH "ÜBERSICHT"
.IX Header "ÜBERSICHT"
.Vb 2
\&    dos2unix [Optionen] [DATEI …] [\-n EINGABEDATEI AUSGABEDATEI …]
\&    unix2dos [Optionen] [DATEI …] [\-n EINGABEDATEI AUSGABEDATEI …]
.Ve
.SH "BESCHREIBUNG"
.IX Header "BESCHREIBUNG"
Das Paket Dos2unix enthält die Werkzeuge \f(CW\*(C`dos2unix\*(C'\fR und \f(CW\*(C`unix2dos\*(C'\fR zum Umwandeln einfacher Textdateien aus dem \s-1DOS\-\s0 oder Mac-Format in das Unix-Format und umgekehrt.
.PP
In Textdateien unter DOS/Windows sind Zeilenumbrüche, auch als neue Zeile (\s-1NL\s0) bekannt, eine Kombination aus zwei Zeichen: einem Wagenrücklauf (Carriage Return, \s-1CR\s0) gefolgt von einem Zeilenvorschub (Line Feed, \s-1LF\s0). In Unix-Textdateien bestehen Zeilenumbrüche nur aus einem Zeichen, dem Zeilenvorschub (\s-1LF\s0). In Mac-Textdateien aus der Zeit vor MacOS X bestand ein Zeilenumbruch aus einem einzelnen CR-Zeichen. Heute verwendet macOS Zeilenumbrüche im Unix-Stil (\s-1LF\s0).
.PP
Neben Zeilenumbrüchen kann Dos2unix auch die Zeichenkodierung von Dateien umwandeln. Einige DOS-Codepages können in Unix Latin\-1 umgewandelt werden, und Windows-Unicode-Dateien (\s-1UTF\-16\s0) können in Unix-Unicode-Dateien (\s-1UTF\-8\s0) umgewandelt werden.
.PP
Binärdateien werden automatisch übersprungen, sofern die Umwandlung nicht erzwungen wird.
.PP
Nicht\-reguläre Dateien, wie Verzeichnisse und \s-1FIFOS\s0 (Weiterleitungen) werden automatisch übersprungen.
.PP
Symbolische Links und deren Ziele werden per Vorgabe unverändert belassen. Symbolische Links können optional ersetzt werden, oder die Ausgabe wird in das Ziel des symbolischen Links geschrieben. Unter Windows wird das Schreiben in das Ziel eines symbolischen Links nicht unterstützt.
.PP
Dos2unix wurde nach dem Vorbild der dos2unix\-Version unter SunOS/Solaris entwickelt, doch es gibt einen wesentlichen Unterschied zum Original: Diese Version ersetzt per Vorgabe Dateien bei der Umwandlung (Alte-Datei-Modus), während unter SunOS/Solaris nur die paarweise Umwandlung (Neue-Datei-Modus) unterstützt wird. Siehe dazu die Optionen \f(CW\*(C`\-o\*(C'\fR und \f(CW\*(C`\-n\*(C'\fR. Ein weiterer Unterschied ist, dass die SunOS/Solaris\-Version in der Voreinstellung die Umwandlung im \fIiso\fR\-Modus vornimmt, während diese Version den \fIascii\fR\-Modus verwendet.
.SH "OPTIONEN"
.IX Header "OPTIONEN"
.IP "\fB\-\-\fR" 4
.IX Item "--"
nimmt an, dass alle folgenden Optionen Dateinamen sind. Verwenden Sie diese Option, wenn Sie Dateien umwandeln wollen, deren Namen mit einem Minuszeichen beginnen. Um beispielsweise eine Datei namens »\-bla« umzuwandeln, können Sie folgenden Befehl verwenden:
.Sp
.Vb 1
\&    dos2unix \-\- \-bla
.Ve
.Sp
oder im Neue-Datei-Modus:
.Sp
.Vb 1
\&    dos2unix \-n \-\- \-bla ausgabe.txt
.Ve
.IP "\fB\-\-allow\-chown\fR" 4
.IX Item "--allow-chown"
erlaubt die Änderung des Eigentümers der Datei im Alte-Datei-Modus.
.Sp
Wenn diese Option verwendet wird, dann bricht die Umwandlung nicht ab, wenn der Eigentümer und die Gruppe der Originaldatei im Alte-Datei-Modus nicht erhalten werden kann. Die Umwandlung wird fortgesetzt und die umgewandelte Datei erhält den gleichen neuen Eigentümer, als wäre sie im Neue-Datei-Modus umgewandelt worden. Siehe auch die Optionen \f(CW\*(C`\-o\*(C'\fR und \f(CW\*(C`\-n\*(C'\fR. Diese Option ist nur verfügbar, wenn dos2unix über Unterstützung für die Erhaltung des Eigentümers und der Gruppe von Dateien verfügt.
.IP "\fB\-ascii\fR" 4
.IX Item "-ascii"
ist der voreingestellte Umwandlungsmodus. Weitere Informationen hierzu finden Sie im Abschnitt \s-1UMWANDLUNGSMODI.\s0
.IP "\fB\-iso\fR" 4
.IX Item "-iso"
wandelt aus dem \s-1DOS\-\s0 in den ISO\-8859\-1\-Zeichensatz um. Weitere Informationen hierzu finden Sie im Abschnitt \s-1UMWANDLUNGSMODI.\s0
.IP "\fB\-1252\fR" 4
.IX Item "-1252"
verwendet die Windows-Codepage 1252 (Westeuropäisch).
.IP "\fB\-437\fR" 4
.IX Item "-437"
verwendet die DOS-Codepage 437 (\s-1US\s0). Dies ist die vorgegebene Codepage für die ISO-Umwandlung.
.IP "\fB\-850\fR" 4
.IX Item "-850"
verwendet die DOS-Codepage 850 (Westeuropäisch).
.IP "\fB\-860\fR" 4
.IX Item "-860"
verwendet die DOS-Codepage 860 (Portugiesisch).
.IP "\fB\-863\fR" 4
.IX Item "-863"
verwendet die DOS-Codepage 863 (Kanadisches Französisch).
.IP "\fB\-865\fR" 4
.IX Item "-865"
verwendet die DOS-Codepage 865 (Skandinavisch).
.IP "\fB\-7\fR" 4
.IX Item "-7"
wandelt 8\-Bit\-Zeichen in ein 7\-Bit\-Bitmuster um.
.IP "\fB\-b, \-\-keep\-bom\fR" 4
.IX Item "-b, --keep-bom"
erhält die Markierung der Bytereihenfolge (\s-1BOM\s0). Wenn die Eingabedatei eine \s-1BOM\s0 enthält, wird ebenfalls eine \s-1BOM\s0 in die Ausgabedatei geschrieben. Dies ist das Standardverhalten beim Umwandeln von DOS\-Zeilenumbrüchen. Siehe auch die Option \f(CW\*(C`\-r\*(C'\fR.
.IP "\fB\-c, \-\-convmode \s-1UMWANDLUNGSMODUS\s0\fR" 4
.IX Item "-c, --convmode UMWANDLUNGSMODUS"
legt den Umwandlungsmodus fest. \s-1UMWANDLUNGSMODUS\s0 kann \fIascii\fR, \fI7bit\fR, \fIiso\fR oder \fImac\fR sein, wobei \fIascii\fR die Vorgabe ist.
.IP "\fB\-D, \-\-display\-enc \s-1KODIERUNG\s0\fR" 4
.IX Item "-D, --display-enc KODIERUNG"
legt die Kodierung des angezeigten Texts fest. \s-1KODIERUNG\s0 kann \fIansi\fR, \fIunicode\fR, \fIunicodebom\fR, \fIutf8\fR oder <utf8bom> sein, wobei \fIansi\fR die Vorgabe ist.
.Sp
Diese Option ist nur in dos2unix für Windows mit Unterstützung für Unicode-Dateinamen verfügbar. Sie bleibt wirkungslos, wenn die tatsächlichen Dateinamen gelesen und geschrieben werden, lediglich bei der Darstellung wird sie berücksichtigt.
.Sp
Es gibt verschiedene Möglichkeiten, Text in einer Windows-Konsole basierend auf dessen Kodierung darzustellen. Alle haben verschiedene Vor\- und Nachteile.
.RS 4
.IP "\fBansi\fR" 4
.IX Item "ansi"
Die Standardmethode von dos2unix ist die Verwendung von ANSI-kodiertem Text, der Vorteil ist deren Abwärtskompatibilität. Dies funktioniert mit Raster\- und TrueType-Schriften. In manchen Gebieten müssen Sie mit dem Befehl \f(CW\*(C`chcp\*(C'\fR die aktive DOS-OEM-Codepage in die \-System\-ANSI\-Codepage des Systems ändern, da dos2unix Letztere verwendet.
.Sp
Der Nachteil von \s-1ANSI\s0 ist, dass internationale Dateinamen nicht korrekt dargestellt werden, wenn darin Zeichen enthalten sind, die nicht in der im System voreingestellten Codepage enthalten sind. Stattdessen wird entweder ein Fragezeichen oder ein falsches Zeichen angezeigt. Sofern Sie nicht mit fremden Dateinamen arbeiten, ist diese Methode in Ordnung.
.IP "\fBunicode, unicodebom\fR" 4
.IX Item "unicode, unicodebom"
Der Vorteil von Unicode (dem Windows-Namen für \s-1UTF\-16\s0) ist die üblicherweise korrekte Textdarstellung. Eine Änderung der aktiven Codepage ist nicht erforderlich. Sie müssen die Schriftart der Konsole auf eine TrueType-Schrift einstellen, damit internationale Zeichen richtig angezeigt werden können. Sollte ein Zeichen in einer TrueType-Schrift nicht enthalten sein, wird ein kleines Quadrat angezeigt, das gelegentlich noch ein Fragezeichen enthält.
.Sp
Wenn Sie die ConEmu-Konsole nutzen, wird der gesamte Text korrekt dargestellt, da ConEmu automatisch eine passende Schrift wählt.
.Sp
Nachteilig für Unicode ist, dass es nicht zu \s-1ASCII\s0 kompatibel ist. Die Ausgabe ist schwer zu verarbeiten, wenn sie in ein anderes Programm oder eine Datei weitergeleitet wird.
.Sp
Wenn die Methode \f(CW\*(C`unicodebom\*(C'\fR verwendet wird, dann wird dem Unicode-Text eine \s-1BOM\s0 (Markierung der Bytereihenfolge) vorangestellt. Eine \s-1BOM\s0 ist für korrekte Um\- oder Weiterleitung in der PowerShell notwendig.
.IP "\fButf8, utf8bom\fR" 4
.IX Item "utf8, utf8bom"
Der Vorteil von \s-1UTF\-8\s0 ist die ASCII\-Kompatibilität. Sie müssen die Schriftart der Konsole auf eine TrueType-Schrift setzen. Dadurch wird der Text ähnlich wie in der \f(CW\*(C`unicode\*(C'\fR\-Kodierung dargestellt.
.Sp
Der Nachteil ist die falsche Darstellung aller Nicht-ASCII-Zeichen, wenn Sie die Standard-Rasterschrift verwenden. Nicht nur Unicode-Dateinamen, sondern auch übersetzte Meldungen werden unlesbar. Auf einem Windows-System, das für eine ostasiatische Region eingerichtet wurde, wird die Konsole bei der Anzeige von Meldungen deutlich flackern.
.Sp
In einer ConEmu-Konsole funktioniert die UTF\-8\-Kodierung gut.
.Sp
Wenn die Methode \f(CW\*(C`utf8bom\*(C'\fR verwendet wird, dann wird dem UTF\-8\-Text eine \s-1BOM\s0 (Markierung der Bytereihenfolge) vorangestellt. Eine \s-1BOM\s0 ist für korrekte Um\- oder Weiterleitung in der PowerShell notwendig.
.RE
.RS 4
.Sp
Die Standardkodierung kann durch Setzen der Umgebungsvariable \s-1DOS2UNIX_DISPLAY_ENC\s0 auf \f(CW\*(C`unicode\*(C'\fR, \f(CW\*(C`unicodebom\*(C'\fR, \f(CW\*(C`utf8\*(C'\fR oder \f(CW\*(C`utf8\*(C'\fR geändert werden.
.RE
.IP "\fB\-e, \-\-add\-eol\fR" 4
.IX Item "-e, --add-eol"
fügt einen Zeilenumbruch nach der letzten Zeile hinzu, falls ein solcher nicht existiert. Dies funktioniert in jeder Umwandlung.
.Sp
Einer Datei, die aus dem \s-1DOS\-\s0 ins Unix-Format umgewandelt wurde, kann ein Zeilenumbruch nach der letzten Zeile fehlen. Es gibt Texteditoren, die Dateien ohne diesen angehängten Zeilenumbruch schreiben. Einige Unix-Programme haben jedoch Probleme mit der Verarbeitung dieser Dateien, da der POSIX-Standard definiert, dass jede Zeile in einer Textdatei mit einem abschließenden Zeilenvorschubzeichen enden muss. Beispielsweise kann es beim Aneinanderhängen von solche Dateien zu unerwarteten Ergebnissen kommen.
.IP "\fB\-f, \-\-force\fR" 4
.IX Item "-f, --force"
erzwingt die Umwandlung von Binärdateien.
.IP "\fB\-gb, \-\-gb18030\fR" 4
.IX Item "-gb, --gb18030"
wandelt unter Windows UTF\-16\-Dateien standardmäßig in \s-1UTF\-8\s0 um, ungeachtet der Einstellung der Locale. Verwenden Sie diese Option zum umwandeln von UTF\-16\-Dateien in \s-1GB18030.\s0 Diese Option ist nur unter Windows verfügbar. Siehe auch Abschnitt \s-1GB18030.\s0
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
zeigt eine Hilfe an und beendet das Programm.
.IP "\fB\-i[\s-1SCHALTER\s0], \-\-info[=SCHALTER] \s-1DATEI\s0 …\fR" 4
.IX Item "-i[SCHALTER], --info[=SCHALTER] DATEI …"
zeigt Dateiinformationen an. Es wird keine Umwandlung vorgenommen.
.Sp
Die Ausgabe der Informationen geschieht in der folgenden Reihenfolge: Anzahl der DOS\-Zeilenumbrüche, Anzahl der Unix\-Zeilenumbrüche, Anzahl der Mac\-Zeilenumbrüche, Markierung der Bytereihenfolge, Text\- oder Binärformat, Dateiname.
.Sp
Beispielausgabe:
.Sp
.Vb 8
\&     6       0       0  no_bom    text    dos.txt
\&     0       6       0  no_bom    text    unix.txt
\&     0       0       6  no_bom    text    mac.txt
\&     6       6       6  no_bom    text    mixed.txt
\&    50       0       0  UTF\-16LE  text    utf16le.txt
\&     0      50       0  no_bom    text    utf8unix.txt
\&    50       0       0  UTF\-8     text    utf8dos.txt
\&     2     418     219  no_bom    binary  dos2unix.exe
.Ve
.Sp
Beachten sie, dass manchmal eine Binärdatei fälschlicherweise als Textdatei erkannt wird. Siehe auch Option \f(CW\*(C`\-s\*(C'\fR.
.Sp
Wenn zusätzlich die Option \f(CW\*(C`\-e\*(C'\fR oder \f(CW\*(C`\-\-add\-eol\*(C'\fR verwendet wird, dann wird auch der Typ des Zeilenumbruchs der letzten Zeile ausgegeben, oder \f(CW\*(C`noeol\*(C'\fR, falls kein solcher Zeilenumbruch existiert.
.Sp
Beispielausgabe:
.Sp
.Vb 4
\&     6       0       0  no_bom    text   dos     dos.txt
\&     0       6       0  no_bom    text   unix    unix.txt
\&     0       0       6  no_bom    text   mac     mac.txt
\&     1       0       0  no_bom    text   noeol   noeol_dos.txt
.Ve
.Sp
Optionale zusätzliche Schalter können gesetzt werden, um die Ausgabe anzupassen. Einer oder mehrere Schalter können hinzugefügt werden.
.RS 4
.IP "\fB0\fR" 4
.IX Item "0"
gibt die Zeilen zur Dateiinformation mit einem Null-Zeichen am Ende anstelle eines Zeilenvorschub-Zeichens aus. Dies ermöglicht die korrekte Interpretation von Leer\- und Anführungszeichen in Dateinamen, wenn der Schalter c verwendet wird. Verwenden Sie diesen Schalter in Kombination mit der \fBxargs\fR\|(1)\-Option \f(CW\*(C`\-0\*(C'\fR oder \f(CW\*(C`\-\-null\*(C'\fR.
.IP "\fBd\fR" 4
.IX Item "d"
gibt die Anzahl der DOS\-Zeilenumbrüche aus.
.IP "\fBu\fR" 4
.IX Item "u"
gibt die Anzahl der Unix\-Zeilenumbrüche aus.
.IP "\fBm\fR" 4
.IX Item "m"
gibt die Anzahl der Mac\-Zeilenumbrüche aus.
.IP "\fBb\fR" 4
.IX Item "b"
gibt die Markierung der Bytereihenfolge aus.
.IP "\fBt\fR" 4
.IX Item "t"
zeigt an, ob es sich um eine Text\- oder eine Binärdatei handelt.
.IP "\fBe\fR" 4
.IX Item "e"
gibt den Typ des Zeilenumbruchs der letzten Zeile aus, oder \f(CW\*(C`noeol\*(C'\fR, falls kein solcher Zeilenumbruch existiert.
.IP "\fBc\fR" 4
.IX Item "c"
gibt nur die Dateien aus, die umgewandelt werden würden.
.Sp
Mit dem Schalter \f(CW\*(C`c\*(C'\fR gibt dos2unix nur die Dateien aus, die DOS\-Zeilenumbrüche enthalten, unix2dos nur die Dateien mit Unix\-Zeilenumbrüchen.
.Sp
Wenn zusätzlich die Option \f(CW\*(C`\-e\*(C'\fR oder \f(CW\*(C`\-\-add\-eol\*(C'\fR verwendet wird, dann werden auch die Dateien ausgegeben, denen der Zeilenumbruch an der letzten Zeile fehlt.
.IP "\fBh\fR" 4
.IX Item "h"
gibt eine Kopfzeile aus.
.IP "\fBp\fR" 4
.IX Item "p"
zeigt Dateinamen ohne Pfade an.
.RE
.RS 4
.Sp
Beispiele:
.Sp
Informationen zu allen *.txt\-Dateien anzeigen:
.Sp
.Vb 1
\&    dos2unix \-i *.txt
.Ve
.Sp
Nur die Anzahl der DOS\-Zeilenumbrüche und Unix\-Zeilenumbrüche anzeigen:
.Sp
.Vb 1
\&    dos2unix \-idu *.txt
.Ve
.Sp
Nur die Markierung der Bytereihenfolge anzeigen:
.Sp
.Vb 1
\&    dos2unix \-\-info=b *.txt
.Ve
.Sp
Die Dateien auflisten, die DOS\-Zeilenumbrüche enthalten:
.Sp
.Vb 1
\&    dos2unix \-ic *.txt
.Ve
.Sp
Die Dateien auflisten, die Unix\-Zeilenumbrüche enthalten:
.Sp
.Vb 1
\&    unix2dos \-ic *.txt
.Ve
.Sp
Die Dateien auflisten, die DOS\-Zeilenumbrüche enthalten oder bei denen der Zeilenumbruch nach der letzten Zeile fehlt:
.Sp
.Vb 1
\&    dos2unix \-e \-ic *.txt
.Ve
.Sp
Nur Dateien umwandeln, die DOS\-Zeilenumbrüche enthalten und die anderen Dateien unverändert belassen:
.Sp
.Vb 1
\&    dos2unix \-ic0 *.txt | xargs \-0 dos2unix
.Ve
.Sp
Nach Textdateien suchen, die DOS\-Zeilenumbrüche enthalten:
.Sp
.Vb 1
\&    find \-name \*(Aq*.txt\*(Aq \-print0 | xargs \-0 dos2unix \-ic
.Ve
.RE
.IP "\fB\-k, \-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
übernimmt den Zeitstempel der Eingabedatei in die Ausgabedatei.
.IP "\fB\-L, \-\-license\fR" 4
.IX Item "-L, --license"
zeigt die Lizenz des Programms an.
.IP "\fB\-l, \-\-newline\fR" 4
.IX Item "-l, --newline"
fügt eine zusätzliche neue Zeile hinzu.
.Sp
\&\fBdos2unix\fR: Nur DOS\-Zeilenumbrüche werden in Unix\-Zeilenumbrüche umgewandelt. Im Mac-Modus werden nur Mac\-Zeilenumbrüche in Unix\-Zeilenumbrüche umgewandelt.
.Sp
\&\fBunix2dos\fR: Nur Unix\-Zeilenumbrüche werden in DOS\-Zeilenumbrüche umgewandelt. Im Mac-Modus werden nur Unix\-Zeilenumbrüche in Mac\-Zeilenumbrüche umgewandelt.
.IP "\fB\-m, \-\-add\-bom\fR" 4
.IX Item "-m, --add-bom"
schreibt eine Markierung der Bytereihenfolge (\s-1BOM\s0) in die Ausgabedatei. In der Voreinstellung wird eine \s-1UTF\-8\-BOM\s0 geschrieben.
.Sp
Wenn die Eingabedatei in \s-1UTF\-16\s0 kodiert ist und die Option \f(CW\*(C`\-u\*(C'\fR verwendet wird, wird eine \s-1UTF\-16\-BOM\s0 geschrieben.
.Sp
Verwenden Sie diese Option niemals, wenn die Kodierung der Ausgabedatei nicht \s-1UTF\-8, UTF\-16\s0 oder \s-1GB 18030\s0 ist. Weitere Informationen finden Sie im Abschnitt \s-1UNICODE.\s0
.IP "\fB\-n, \-\-newfile \s-1EINGABEDATEI AUSGABEDATEI\s0 …\fR" 4
.IX Item "-n, --newfile EINGABEDATEI AUSGABEDATEI …"
Neue-Datei-Modus. Die \s-1EINGABEDATEI\s0 wird umgewandelt und in die \s-1AUSGABEDATEI\s0 geschrieben. Die Dateinamen müssen paarweise angegeben werden. Platzhalter sollten \fInicht\fR verwendet werden, sonst werden Sie Ihre Dateien \fIverlieren\fR.
.Sp
Der Benutzer, der die Umwandlung im Neue-Datei-Modus startet, wird Besitzer der umgewandelten Datei. Die Lese\- und Schreibrechte werden aus den Zugriffsrechten der Originaldatei minus der \fBumask\fR\|(1) der Person ermittelt, die die Umwandlung ausgeführt hat.
.IP "\fB\-\-no\-allow\-chown\fR" 4
.IX Item "--no-allow-chown"
verhindert die Änderung des Eigentümers der Datei im Alte-Datei-Modus (Voreinstellung).
.Sp
bricht die Umwandlung ab, wenn der Eigentümer und/oder die Gruppe der Originaldatei im Alte-Datei-Modus nicht erhalten werden kann. Siehe auch die Optionen \f(CW\*(C`\-o\*(C'\fR und \f(CW\*(C`\-n\*(C'\fR. Diese Option ist nur verfügbar, wenn dos2unix über Unterstützung für die Erhaltung des Eigentümers und der Gruppe von Dateien verfügt.
.IP "\fB\-\-no\-add\-eol\fR" 4
.IX Item "--no-add-eol"
fügt keinen Zeilenumbruch nach der letzten Zeile hinzu, falls ein solcher nicht existiert.
.IP "\fB\-O, \-\-to\-stdout\fR" 4
.IX Item "-O, --to-stdout"
schreibt wie ein Unix-Filter in die Standardausgabe. Mit der Option \f(CW\*(C`\-o\*(C'\fR können Sie zum Alte-Datei-Modus (Ersetzungsmodus) zurückkehren.
.Sp
In Kombination mit der Option \f(CW\*(C`\-e\*(C'\fR können Dateien korrekt aneinandergehängt werden. Weder werden Zeilen ohne Umbruch zusammengeführt, noch werden Unicode-Markierungen der Bytereihenfolge mitten in die verkettete Datei gesetzt. Beispiel:
.Sp
.Vb 1
\&    dos2unix \-e \-O Datei1.txt Datei2.txt > Ausgabe.txt
.Ve
.IP "\fB\-o, \-\-oldfile \s-1DATEI\s0 …\fR" 4
.IX Item "-o, --oldfile DATEI …"
Alte-Datei-Modus. Die \s-1DATEI\s0 wird umgewandelt und durch die Ausgabedatei überschrieben. Per Vorgabe werden Umwandlungen in diesem Modus ausgeführt. Platzhalter sind verwendbar.
.Sp
Im Alte-Datei-Modus (Ersetzungsmodus) erhalten die umgewandelten Dateien den gleichen Eigentümer, die gleiche Gruppe und die gleichen Lese\- und Schreibberechtigungen wie die Originaldatei, auch wenn die Datei von einem anderen Benutzer umgewandelt wird, der Schreibrechte für die Datei hat (zum Beispiel der Systemadministrator). Die Umwandlung wird abgebrochen, wenn es nicht möglich ist, die originalen Werte beizubehalten. Die Änderung des Eigentümers könnte zum Beispiel bewirken, dass der ursprüngliche Eigentümer die Datei nicht mehr lesen kann. Die Änderung der Gruppe könnte ein Sicherheitsrisiko sein, da die Datei vielleicht für Benutzer lesbar wird, für die sie nicht bestimmt ist. Die Beibehaltung von Eigentümer, Gruppe und Schreib\- und Leserechten wird nur unter Unix unterstützt.
.Sp
Um herauszufinden, ob dos2unix über Unterstützung für die Erhaltung von Eigentümer und Gruppe von Dateien verfügt, rufen Sie \f(CW\*(C`dos2unix \-V\*(C'\fR auf.
.Sp
Die Umwandlung führt stets über eine temporäre Datei. Tritt im Laufe der Umwandlung ein Fehler auf, wird die temporäre Datei gelöscht und die Originaldatei bleibt intakt. War die Umwandlung erfolgreich, wird die Originaldatei durch die temporäre Datei ersetzt. Sie können Schreibrechte für die Originaldatei haben, aber keine Rechte, um die gleichen Eigentumsverhältnisse wie die der Originaldatei für die temporäre Datei festzulegen. Das bedeutet, dass Sie Eigentümer und Gruppe der Originaldatei nicht bewahren können. In diesem Fall können Sie die Option \f(CW\*(C`\-\-allow\-chown\*(C'\fR verwenden, um die Umwandlung fortzusetzen:
.Sp
.Vb 1
\&    dos2unix \-\-allow\-chown foo.txt
.Ve
.Sp
Eine weitere Option ist der Neue-Datei-Modus:
.Sp
.Vb 1
\&    dos2unix \-n foo.txt foo.txt
.Ve
.Sp
Der Vorteil der Option \f(CW\*(C`\-\-allow\-chown\*(C'\fR ist, dass Sie Platzhalter verwenden können und die Eigentumsverhältnisse bewahrt bleiben, sofern möglich.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Stiller Modus, in dem alle Warnungen und sonstige Meldungen unterdrückt werden. Der Rückgabewert ist 0, außer wenn fehlerhafte Befehlszeilenoptionen angegeben werden.
.IP "\fB\-r, \-\-remove\-bom\fR" 4
.IX Item "-r, --remove-bom"
entfernt die Markierung der Bytereihenfolge (\s-1BOM\s0). Es wird keine \s-1BOM\s0 in die Ausgabedatei geschrieben. Dies ist das Standardverhalten beim Umwandeln von Unix\-Zeilenumbrüchen. Siehe auch die Option \f(CW\*(C`\-b\*(C'\fR.
.IP "\fB\-s, \-\-safe\fR" 4
.IX Item "-s, --safe"
überspringt Binärdateien (Vorgabe).
.Sp
Binärdateien werden übersprungen, damit unerwünschtes Fehlverhalten vermieden wird. Denken Sie daran, dass die Erkennung nicht 100% sicher funktioniert. Die übergebenen Dateien werden auf Binärsymbole überprüft, die typischerweise in Textdateien nicht vorkommen. Es ist jedoch möglich, dass eine Binärdatei ausschließlich gewöhnliche Textzeichen enthält. Eine solche Binärdatei wird dann fälschlicherweise als Textdatei angesehen.
.IP "\fB\-u, \-\-keep\-utf16\fR" 4
.IX Item "-u, --keep-utf16"
erhält die originale UTF\-16\-Kodierung der Eingabedatei. Die Ausgabedatei wird in der gleichen UTF\-16\-Kodierung geschrieben (Little\-Endian\- oder Big-Endian-Bytereihenfolge) wie die Eingabedatei. Dies verhindert die Umwandlung in \s-1UTF\-8.\s0 Eine \s-1UTF\-16\-BOM\s0 wird dementsprechend geschrieben. Diese Option kann durch Angabe der Option \f(CW\*(C`\-ascii\*(C'\fR deaktiviert werden.
.IP "\fB\-ul, \-\-assume\-utf16le\fR" 4
.IX Item "-ul, --assume-utf16le"
nimmt an, dass die Eingabedatei das Format \s-1UTF\-16LE\s0 hat.
.Sp
Wenn die Eingabedatei eine Markierung der Bytereihenfolge enthält (\s-1BOM\s0), dann hat die \s-1BOM\s0 Vorrang vor dieser Option.
.Sp
Durch eine falsche Annahme (die Eingabedatei war nicht in \s-1UTF\-16LE\s0 kodiert) mit erfolgreicher Umwandlung erhalten Sie eine UTF\-8\-Ausgabedatei mit fehlerhaftem Text. Sie können die fehlgeschlagene Umwandlung mit \fBiconv\fR\|(1) rückgängig machen, indem Sie die Rückumwandlung von \s-1UTF\-8\s0 nach \s-1UTF\-16LE\s0 vornehmen. Dadurch gewinnen Sie die Originaldatei zurück.
.Sp
Die Annahme von \s-1UTF\-16LE\s0 wirkt wie ein \fIUmwandlungsmodus\fR. Beim Wechsel zum vorgegebenen \fIascii\fR\-Modus wird die UTF16LE\-Annahme deaktiviert.
.IP "\fB\-ub, \-\-assume\-utf16be\fR" 4
.IX Item "-ub, --assume-utf16be"
nimmt an, dass die Eingabedatei das Format \s-1UTF\-16BE\s0 hat.
.Sp
Diese Option ist gleichbedeutend mit \f(CW\*(C`\-ul\*(C'\fR.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
zeigt ausführliche Meldungen an. Zusätzliche Informationen werden zu den Markierungen der Bytereihenfolge (\s-1BOM\s0) und zur Anzahl der umgewandelten Zeilenumbrüche angezeigt.
.IP "\fB\-F, \-\-follow\-symlink\fR" 4
.IX Item "-F, --follow-symlink"
folgt symbolischen Links und wandelt die Zieldateien um.
.IP "\fB\-R, \-\-replace\-symlink\fR" 4
.IX Item "-R, --replace-symlink"
ersetzt symbolische Links durch die umgewandelten Dateien (die originalen Zieldateien bleiben unverändert).
.IP "\fB\-S, \-\-skip\-symlink\fR" 4
.IX Item "-S, --skip-symlink"
erhält symbolische Links als solche und lässt die Ziele unverändert (Vorgabe).
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
zeigt Versionsinformationen an und beendet das Programm.
.SH "MAC-MODUS"
.IX Header "MAC-MODUS"
In der Voreinstellung werden Zeilenumbrüche von \s-1DOS\s0 nach Unix und umgekehrt umgewandelt. Mac\-Zeilenumbrüche werden nicht verändert.
.PP
Im Mac-Modus werden Zeilenumbrüche von Mac nach Unix und umgekehrt umgewandelt. DOS\-Zeilenumbrüche werden nicht verändert.
.PP
Um das Programm im Mac-Modus auszuführen, verwenden Sie die Befehlszeilenoption \f(CW\*(C`\-c mac\*(C'\fR oder die Befehle \f(CW\*(C`mac2unix\*(C'\fR oder \f(CW\*(C`unix2mac\*(C'\fR.
.SH "UMWANDLUNGSMODI"
.IX Header "UMWANDLUNGSMODI"
.IP "\fBascii\fR" 4
.IX Item "ascii"
Dies ist der vorgegebene Umwandlungsmodus. Dieser Modus dient zum Umwandeln von \s-1ASCII\-\s0 und ASCII-kompatibel kodierten Dateien, wie \s-1UTF\-8.\s0 Durch Aktivierung des \fBascii\fR\-Modus werden die Modi \fB7bit\fR und \fBiso\fR deaktiviert.
.Sp
Falls dos2unix über Unterstützung für \s-1UTF\-16\s0 verfügt, werden UTF\-16\-kodierte Dateien auf POSIX-Systemen in die aktuelle Zeichenkodierung der Locale und unter Windows in \s-1UTF\-8\s0 umgewandelt. Die Aktivierung des \fBascii\fR\-Modus deaktiviert die Option \f(CW\*(C`\-u\*(C'\fR zum Erhalten der UTF\-16\-Kodierung sowie die Optionen \f(CW\*(C`\-ul\*(C'\fR und \f(CW\*(C`\-ub\*(C'\fR, welche davon ausgehen, dass die Eingabe in \s-1UTF\-16\s0 kodiert ist. Geben Sie den Befehl \f(CW\*(C`dos2unix \-V\*(C'\fR ein, um zu sehen, ob dos2unix \s-1UTF\-16\s0 unterstützt. Weitere Informationen hierzu finden Sie im Abschnitt \s-1UNICODE.\s0
.IP "\fB7bit\fR" 4
.IX Item "7bit"
In diesem Modus werden alle Nicht-ASCII-Zeichen aus 8 Bit in das 7\-Bit\-Bitmuster umgewandelt.
.IP "\fBiso\fR" 4
.IX Item "iso"
Die Zeichen werden aus dem DOS-Zeichensatz (der Codepage) in den ISO-Zeichensatz \s-1ISO\-8859\-1\s0 (Latin\-1) in Unix umgewandelt. DOS-Zeichen ohne Äquivalent in \s-1ISO\-8859\-1,\s0 für die die Umwandlung nicht möglich ist, werden durch einen Punkt ersetzt. Gleiches gilt für ISO\-8859\-1\-Zeichen ohne DOS\-Gegenstück.
.Sp
Wenn nur die Option \f(CW\*(C`\-iso\*(C'\fR angegeben ist, versucht dos2unix die aktive Codepage selbst zu ermitteln. Sollte dies nicht möglich sein, wird die Standard-Codepage \s-1CP437\s0 verwendet, welche hauptsächlich in den \s-1USA\s0 eingesetzt wird. Um eine bestimmte Codepage zu erzwingen, verwenden Sie die Optionen \f(CW\*(C`\-437\*(C'\fR (\s-1US\s0), \f(CW\*(C`\-850\*(C'\fR (Westeuropäisch), \f(CW\*(C`\-860\*(C'\fR (Portugiesisch), \f(CW\*(C`\-863\*(C'\fR (Kanadisches Französisch) oder \f(CW\*(C`\-865\*(C'\fR (Skandinavisch). Die Windows-Codepage \s-1CP1252\s0 (Westeuropäisch) wird durch die Option \f(CW\*(C`\-1252\*(C'\fR unterstützt.
.Sp
Wenden Sie niemals die ISO-Umwandlung auf Unicode-Textdateien an. In \s-1UTF\-8\s0 kodierte Dateien werden dadurch beschädigt.
.Sp
Einige Beispiele:
.Sp
Umwandlung aus der vorgegebenen DOS-Codepage nach Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-iso \-n in.txt ausgabe.txt
.Ve
.Sp
Umwandlung von \s-1DOS CP850\s0 nach Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-850 \-n eingabe.txt ausgabe.txt
.Ve
.Sp
Umwandlung von Windows \s-1CP1252\s0 nach Unix Latin\-1:
.Sp
.Vb 1
\&    dos2unix \-1252 \-n eingabe.txt ausgabe.txt
.Ve
.Sp
Umwandlung von Windows \s-1CP1252\s0 nach Unix \s-1UTF\-8\s0 (Unicode):
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t UTF\-8 eingabe.txt | dos2unix > ausgabe.txt
.Ve
.Sp
Umwandlung von Unix Latin\-1 in die vorgegebene DOS-Codepage:
.Sp
.Vb 1
\&    unix2dos \-iso \-n eingabe.txt ausgabe.txt
.Ve
.Sp
Umwandlung von Unix Latin\-1 nach \s-1DOS CP850:\s0
.Sp
.Vb 1
\&    unix2dos \-850 \-n eingabe.txt ausgabe.txt
.Ve
.Sp
Umwandlung von Unix Latin\-1 nach Windows \s-1CP1252:\s0
.Sp
.Vb 1
\&    unix2dos \-1252 \-n eingabe.txt ausgabe.txt
.Ve
.Sp
Umwandlung von Unix \s-1UTF\-8\s0 (Unicode) nach Windows \s-1CP1252:\s0
.Sp
.Vb 1
\&    unix2dos < eingabe.txt | iconv \-f UTF\-8 \-t CP1252 > ausgabe.txt
.Ve
.Sp
Siehe auch <http://czyborra.com/charsets/codepages.html> und <http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
.SS "Zeichenkodierungen"
.IX Subsection "Zeichenkodierungen"
Es gibt verschiedene Unicode-Zeichenkodierungen. Unter Unix und Linux sind Unicode-Dateien typischerweise in \s-1UTF\-8\s0 kodiert. Unter Windows können Textdateien in \s-1UTF\-8, UTF\-16\s0 oder \s-1UTF\-16\s0 in Big-Endian-Bytereihenfolge kodiert sein, liegen aber meist im Format \s-1UTF\-16\s0 vor.
.SS "Umwandlung"
.IX Subsection "Umwandlung"
Unicode-Textdateien können \s-1DOS\-,\s0 Unix\- oder Mac\-Zeilenumbrüche enthalten, so wie ASCII-Textdateien.
.PP
Alle Versionen von dos2unix und unix2dos können UTF\-8\-kodierte Dateien umwandeln, weil \s-1UTF\-8\s0 im Hinblick auf Abwärtskompatibilität mit \s-1ASCII\s0 entwickelt wurde.
.PP
Dos2unix und unix2dos mit Unterstützung für \s-1UTF\-16\s0 können in \s-1UTF\-16\s0 kodierte Dateien in Little\-Endian\- und Big-Endian-Bytereihenfolge lesen. Um festzustellen, ob dos2unix mit UTF\-16\-Unterstützung kompiliert wurde, geben Sie \f(CW\*(C`dos2unix \-V\*(C'\fR ein.
.PP
Unter Unix/Linux werden \s-1UTF\-16\s0 kodierte Dateien standardmäßig in die Zeichenkodierung entsprechend der Locale umgewandelt. Mit dem Befehl \fBlocale\fR\|(1) können Sie herausfinden, wie die Zeichenkodierung der Locale eingestellt ist. Wenn eine Umwandlung nicht möglich ist, verursacht dies einen Umwandlungsfehler, wodurch die Datei übersprungen wird.
.PP
Unter Windows werden UTF\-16\-Dateien standardmäßig in \s-1UTF\-8\s0 umgewandelt. In \s-1UTF\-8\s0 formatierte Textdateien werden von Windows und Unix/Linux gleichermaßen unterstützt.
.PP
Die Kodierungen \s-1UTF\-16\s0 und \s-1UTF\-8\s0 sind vollständig kompatibel, daher wird bei der Umwandlung keinerlei Text verlorengehen. Sollte bei der Umwandlung von \s-1UTF\-16\s0 in \s-1UTF\-8\s0 ein Problem auftreten, beispielsweise wenn die UTF\-16\-kodierte Eingabedatei einen Fehler enthält, dann wird diese Datei übersprungen.
.PP
Wenn die Option \f(CW\*(C`\-u\*(C'\fR verwendet wird, wird die Ausgabedatei in der gleichen UTF\-16\-Kodierung wie die Eingabedatei geschrieben. Die Option \f(CW\*(C`\-u\*(C'\fR verhindert die Umwandlung in \s-1UTF\-8.\s0
.PP
Dos2unix und unix2dos bieten keine Option zur Umwandlung von UTF\-8\-Dateien in \s-1UTF\-16.\s0
.PP
Umwandlungen im \s-1ISO\-\s0 und 7bit\-Modus funktionieren mit UTF\-16\-Dateien nicht.
.SS "Markierung der Bytereihenfolge"
.IX Subsection "Markierung der Bytereihenfolge"
Unicode-Textdateien unter Windows haben typischerweise eine Markierung der Bytereihenfolge (\s-1BOM\s0), da viele Windows-Programme (zum Beispiel Notepad) solche BOMs standardmäßig hinzufügen. Weitere Informationen hierzu finden Sie auf <https://de.wikipedia.org/wiki/Byte\-Reihenfolge>.
.PP
Unter Unix haben Textdateien üblicherweise keine \s-1BOM.\s0 Es wird stattdessen angenommen, dass Textdateien in der Zeichenkodierung entsprechend der Spracheinstellung vorliegen.
.PP
Dos2unix kann nur dann erkennen, ob eine Datei UTF\-16\-kodiert ist, wenn die Datei eine \s-1BOM\s0 enthält. Ist dies nicht der Fall, nimmt dos2unix an, dass es sich um eine Binärdatei handelt.
.PP
Verwenden Sie die Optionen \f(CW\*(C`\-ul\*(C'\fR oder \f(CW\*(C`\-ub\*(C'\fR, um eine UTF\-16\-Datei ohne \s-1BOM\s0 umzuwandeln.
.PP
Dos2unix schreibt in der Voreinstellung keine \s-1BOM\s0 in die Ausgabedatei. Mit der Option \f(CW\*(C`\-b\*(C'\fR schreibt Dos2unix eine \s-1BOM,\s0 wenn die Eingabedatei ebenfalls eine \s-1BOM\s0 hat.
.PP
Unix2dos schreibt in der Voreinstellung eine \s-1BOM\s0 in die Ausgabedatei, wenn die Eingabedatei ebenfalls eine solche Markierung hat. Verwenden Sie die Option \f(CW\*(C`\-r\*(C'\fR, um die \s-1BOM\s0 zu entfernen.
.PP
Dos2unix und unix2dos schreiben immer eine \s-1BOM,\s0 wenn die Option \f(CW\*(C`\-m\*(C'\fR angegeben ist.
.SS "Unicode-Dateinamen unter Windows"
.IX Subsection "Unicode-Dateinamen unter Windows"
Dos2unix verfügt über optionale Unterstützung für das Lesen und Schreiben von Unicode-Dateinamen in der Windows-Eingabeaufforderung. Dadurch kann dos2unix Dateien öffnen, deren Namen Zeichen enthalten, die nicht zur Standard-ANSI-Codepage des Systems gehören. Geben Sie \f(CW\*(C`dos2unix \-V\*(C'\fR ein, um zu sehen, ob dos2unix für Windows mit Unterstützung für Unicode-Dateinamen erstellt wurde.
.PP
Die Anzeige von Unicode-Dateinamen in einer Windows-Konsole ist gelegentlich nicht fehlerfrei, siehe die Option \f(CW\*(C`\-D\*(C'\fR, \f(CW\*(C`\-\-display\-enc\*(C'\fR. Die Dateinamen können falsch dargestellt werden, allerdings werden die Dateien mit deren korrekten Namen gespeichert.
.SS "Unicode-Beispiele"
.IX Subsection "Unicode-Beispiele"
Umwandlung von Windows \s-1UTF\-16\s0 (mit \s-1BOM\s0) nach Unix \s-1UTF\-8:\s0
.PP
.Vb 1
\&    dos2unix \-n eingabe.txt ausgabe.txt
.Ve
.PP
Umwandlung von Windows \s-1UTF\-16LE\s0 (ohne \s-1BOM\s0) nach Unix \s-1UTF\-8:\s0
.PP
.Vb 1
\&    dos2unix \-ul \-n eingabe.txt ausgabe.txt
.Ve
.PP
Umwandlung von Unix \s-1UTF\-8\s0 nach Windows \s-1UTF\-8\s0 mit \s-1BOM:\s0
.PP
.Vb 1
\&    unix2dos \-m \-n eingabe.txt ausgabe.txt
.Ve
.PP
Umwandlung von Unix \s-1UTF\-8\s0 nach Windows \s-1UTF\-16:\s0
.PP
.Vb 1
\&    unix2dos < eingabe.txt | iconv \-f UTF\-8 \-t UTF\-16 > ausgabe.txt
.Ve
.SH "GB18030"
.IX Header "GB18030"
\&\s-1GB18030\s0 ist ein Standard der chinesischen Regierung. Eine Teilmenge des in \s-1GB18030\s0 definierten Standards ist offiziell für alle in China verkauften Softwareprodukte vorgeschrieben. Siehe auch <https://de.wikipedia.org/wiki/GB_18030>.
.PP
\&\s-1GB18030\s0 ist vollständig zu Unicode kompatibel und kann als Unicode-Umwandlungsformat betrachtet werden. Wie auch \s-1UTF\-8\s0 ist \s-1GB18030\s0 kompatibel zu \s-1ASCII.\s0 Ebenfalls kompatibel ist es zur Codepage 936 von Windows, auch als \s-1GBK\s0 bekannt.
.PP
Unter Unix/Linux werden UTF\-16\-Dateien in \s-1GB18030\s0 umgewandelt, wenn die Einstellung der Locale auf \s-1GB18030\s0 gesetzt ist. Beachten Sie, dass dies nur funktioniert, wenn die Locale vom System unterstützt wird. Mit dem Befehl \f(CW\*(C`locale \-a\*(C'\fR erhalten Sie eine Liste der unterstützten Locales.
.PP
Unter Windows benötigen Sie die Option \f(CW\*(C`\-gb\*(C'\fR, um UTF\-16\-Dateien in \s-1GB18030\s0 umwandeln zu können.
.PP
In \s-1GB 18030\s0 kodierte Dateien haben wie Unicode-Dateien eine Markierung der Bytereihenfolge (\s-1BOM\s0).
.SH "BEISPIELE"
.IX Header "BEISPIELE"
Aus der Standardeingabe lesen und in die Standardausgabe schreiben:
.PP
.Vb 2
\&    dos2unix < a.txt
\&    cat a.txt | dos2unix
.Ve
.PP
a.txt umwandeln und ersetzen, b.txt umwandeln und ersetzen:
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix \-o a.txt b.txt
.Ve
.PP
a.txt im ascii-Modus umwandeln und ersetzen:
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
a.txt im ascii-Modus umwandeln und ersetzen, b.txt im 7bit\-Modus umwandeln und ersetzen:
.PP
.Vb 3
\&    dos2unix a.txt \-c 7bit b.txt
\&    dos2unix \-c ascii a.txt \-c 7bit b.txt
\&    dos2unix \-ascii a.txt \-7 b.txt
.Ve
.PP
a.txt aus dem Mac\- in das Unix-Format umwandeln:
.PP
.Vb 2
\&    dos2unix \-c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
a.txt aus dem Unix\- in das Mac-Format umwandeln:
.PP
.Vb 2
\&    unix2dos \-c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
a.txt unter Beibehaltung des ursprünglichen Zeitstempels umwandeln:
.PP
.Vb 2
\&    dos2unix \-k a.txt
\&    dos2unix \-k \-o a.txt
.Ve
.PP
a.txt umwandeln und das Ergebnis nach e.txt schreiben:
.PP
.Vb 1
\&    dos2unix \-n a.txt e.txt
.Ve
.PP
a.txt umwandeln und das Ergebnis nach e.txt schreiben, wobei e.txt den gleichen Zeitstempel erhält wie a.txt:
.PP
.Vb 1
\&    dos2unix \-k \-n a.txt e.txt
.Ve
.PP
a.txt umwandeln und ersetzen, b.txt umwandeln und das Ergebnis nach e.txt schreiben:
.PP
.Vb 2
\&    dos2unix a.txt \-n b.txt e.txt
\&    dos2unix \-o a.txt \-n b.txt e.txt
.Ve
.PP
c.txt umwandeln und das Ergebnis nach e.txt schreiben, a.txt umwandeln und ersetzen, b.txt umwandeln und ersetzen, d.txt umwandeln und das Ergebnis nach f.txt schreiben:
.PP
.Vb 1
\&    dos2unix \-n c.txt e.txt \-o a.txt b.txt \-n d.txt f.txt
.Ve
.SH "REKURSIVE UMWANDLUNG"
.IX Header "REKURSIVE UMWANDLUNG"
In einer Unix-Shell können Sie dos2unix zusammen mit den Befehlen \fBfind\fR\|(1) und \fBxargs\fR\|(1) verwenden, um Textdateien in einem Verzeichnisbaum rekursiv umzuwandeln. Um beispielsweise alle *.txt\-Dateien im aktuellen Verzeichnis und dessen Unterverzeichnissen umzuwandeln, geben Sie Folgendes ein:
.PP
.Vb 1
\&    find . \-name \*(Aq*.txt\*(Aq \-print0 |xargs \-0 dos2unix
.Ve
.PP
Die \fBfind\fR\|(1)\-Option \f(CW\*(C`\-print0\*(C'\fR und die korrespondierende \fBxargs\fR\|(1)\-Option \f(CW\*(C`\-0\*(C'\fR werden für Dateien benötigt, deren Namen Leerzeichen oder Anführungszeichen enthalten. Ansonsten können diese Optionen weggelassen werden. Eine weitere Möglichkeit ist, \fBfind\fR\|(1) zusammen mit der Option \f(CW\*(C`\-exec\*(C'\fR zu verwenden:
.PP
.Vb 1
\&    find . \-name \*(Aq*.txt\*(Aq \-exec dos2unix {} \e;
.Ve
.PP
In einer Windows-Eingabeaufforderung kann der folgende Befehl verwendet werden:
.PP
.Vb 1
\&    for /R %G in (*.txt) do dos2unix "%G"
.Ve
.PP
In der Windows PowerShell können Sie folgenden Befehl verwenden:
.PP
.Vb 1
\&    get\-childitem \-path . \-filter \*(Aq*.txt\*(Aq \-recurse | foreach\-object {dos2unix $_.Fullname}
.Ve
.SH "LOKALISIERUNG"
.IX Header "LOKALISIERUNG"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
Die primäre Sprache wird durch die Umgebungsvariable \s-1LANG\s0 festgelegt. Diese Variable besteht aus mehreren Teilen: Der erste Teil besteht aus zwei Kleinbuchstaben, die den Sprachcode angeben. Der zweite Teil ist optional und bezeichnet den Ländercode in Großbuchstaben, vom davor stehenden Sprachcode durch einen Unterstrich getrennt. Der dritte Teil ist ebenfalls optional und gibt die Zeichenkodierung an, vom Ländercode durch einen Punkt getrennt. Einige Beispiele für Standard-POSIX-Shells:
.Sp
.Vb 7
\&    export LANG=de               Deutsch
\&    export LANG=de_DE            Deutsch, Deutschland
\&    export LANG=de_AT            Deutsch, Österreich
\&    export LANG=es_ES            Spanisch, Spanien
\&    export LANG=es_MX            Spanisch, Mexiko
\&    export LANG=en_US.iso88591   Englisch, USA, Latin\-1\-Zeichenkodierung
\&    export LANG=en_GB.UTF\-8      Englisch, GB, UTF\-8\-Zeichenkodierung
.Ve
.Sp
Eine vollständige Liste der Sprachen und Ländercodes finden Sie im Gettext-Handbuch: <https://www.gnu.org/software/gettext/manual/html_node/Usual\-Language\-Codes.html>
.Sp
Auf Unix-Systemen erhalten Sie mit dem Befehl \fBlocale\fR\|(1) spezifische Informationen zu den Spracheinstellungen.
.IP "\fB\s-1LANGUAGE\s0\fR" 4
.IX Item "LANGUAGE"
Mit der Umgebungsvariable \s-1LANGUAGE\s0 können Sie eine Prioritätenliste für Sprachen übergeben, die Sie durch Doppelpunkte voneinander trennen. Dos2unix gibt \s-1LANGUAGE\s0 vor \s-1LANG\s0 den Vorzug, zum Beispiel bei Deutsch vor Niederländisch: \f(CW\*(C`LANGUAGE=de:nl\*(C'\fR. Sie müssen zunächst die Lokalisierung aktivieren, indem Sie die Variable \s-1LANG\s0 (oder \s-1LC_ALL\s0) auf einen anderen Wert als »C« setzen, bevor Sie die Liste der Sprachprioritäten mit der Variable \s-1LANGUAGE\s0 nutzen können. Weitere Informationen finden Sie im Gettext-Handbuch: <https://www.gnu.org/software/gettext/manual/html_node/The\-LANGUAGE\-variable.html>
.Sp
Falls Sie eine Sprache auswählen, die nicht verfügbar ist, erhalten Sie die Standardmeldungen in englischer Sprache.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
Durch die Umgebungsvariable \s-1DOS2UNIX_LOCALEDIR\s0 wird \s-1LOCALEDIR\s0 während der Kompilierung übergangen. \s-1LOCALEDIR\s0 wird verwendet, um Sprachdateien zu finden. Der GNU-Standardwert ist \f(CW\*(C`/usr/local/share/locale\*(C'\fR.  Die Option \fB\-\-version\fR zeigt das verwendete \s-1LOCALEDIR\s0 an.
.Sp
Beispiel (POSIX-Shell):
.Sp
.Vb 1
\&    export DOS2UNIX_LOCALEDIR=$HOME/share/locale
.Ve
.SH "RÜCKGABEWERT"
.IX Header "RÜCKGABEWERT"
Bei Erfolg wird 0 zurückgegeben. Bei aufgetretenen Systemfehlern wird der letzte Systemfehler zurückgegeben. Für alle anderen Fehler wird 1 zurückgegeben.
.PP
Der Rückgabewert ist im stillen Modus stets 0, außer wenn fehlerhafte Befehlszeilenoptionen verwendet werden.
.SH "STANDARDS"
.IX Header "STANDARDS"
<https://de.wikipedia.org/wiki/Textdatei>
.PP
<https://de.wikipedia.org/wiki/Wagenr%C3%BCcklauf>
.PP
<https://de.wikipedia.org/wiki/Zeilenumbruch>
.PP
<https://de.wikipedia.org/wiki/Unicode>
.SH "AUTOREN"
.IX Header "AUTOREN"
Benjamin Lin \- <blin@socs.uts.edu.au>, Bernd Johannes Wuebben (Mac2unix\-Modus) \- <wuebben@kde.org>, Christian Wurll (Extra Zeilenumbruch) \- <wurll@ira.uka.de>, Erwin Waterlander \- <waterlan@xs4all.nl> (Betreuer)
.PP
Projektseite: <https://waterlan.home.xs4all.nl/dos2unix.html>
.PP
SourceForge-Seite: <https://sourceforge.net/projects/dos2unix/>
.SH "SIEHE AUCH"
.IX Header "SIEHE AUCH"
\&\fBfile\fR\|(1)  \fBfind\fR\|(1)  \fBiconv\fR\|(1)  \fBlocale\fR\|(1)  \fBxargs\fR\|(1)
